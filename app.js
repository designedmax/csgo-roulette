// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand(); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const user = tg.initDataUnsafe.user;
let userName = "–ò–≥—Ä–æ–∫"; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

if (user) {
    if (user.first_name) userName = user.first_name;
    if (user.username) userName += ` (@${user.username})`;
}

// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–º—è –∏ –∞–≤–∞—Ç–∞—Ä
document.getElementById("username").textContent = userName;
document.getElementById("user-avatar").src = user?.photo_url || "https://via.placeholder.com/50";

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫–∏–Ω–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
const skins = [
    { name: "AK-47 | –ö—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è", price: 500 },
    { name: "AWP | –§–µ—è", price: 1000 },
    { name: "M4A4 | –ö—Ä—É—à–∏—Ç–µ–ª—å", price: 300 },
    { name: "–ù–æ–∂ | –ë–∞–±–æ—á–∫–∞", price: 5000 },
    { name: "–í–∏–ª–∫–∞ | –í –∂–æ–ø—É", price: 300 },
    { name: "–§–∞–∫ | –ù–∞—Ö", price: 100 },
];

// –ö—Ä—É—Ç–∏–º —Ä—É–ª–µ—Ç–∫—É
function spinRoulette(price) {
    const winChance = 0.4; // 40% —à–∞–Ω—Å
    const isWin = Math.random() < winChance;
    const resultElement = document.getElementById("skin-result");
    const resultContainer = document.getElementById("result");
    const rouletteButtons = document.querySelectorAll(".roulette-btn");

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏
    rouletteButtons.forEach(btn => btn.disabled = true);

    // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
    resultElement.innerHTML = `<div class="spinner">üéÆ</div>`;
    resultContainer.classList.remove("hidden");

    // –ò–º–∏—Ç–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è (3 —Å–µ–∫—É–Ω–¥—ã)
    let spinTime = 0;
    const spinInterval = setInterval(() => {
        spinTime += 100;
        const emojis = ["üî´", "üí£", "üî™", "üí∞", "üéØ"];
        resultElement.innerHTML = `<div class="spinner">${emojis[Math.floor(Math.random() * emojis.length)]}</div>`;

        if (spinTime >= 3000) {
            clearInterval(spinInterval);
            showResult(isWin, price);
            rouletteButtons.forEach(btn => btn.disabled = false);
        }
    }, 100);
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
function showResult(isWin, betAmount) {
    const resultElement = document.getElementById("skin-result");
    const randomSkin = skins[Math.floor(Math.random() * skins.length)];

    if (isWin) {
        resultElement.innerHTML = `
            <p>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏:</p>
            <h4>${randomSkin.name}</h4>
            <p>–¶–µ–Ω–∞: ${randomSkin.price} ‚ÇΩ</p>
        `;
        saveToHistory("win", randomSkin.name, randomSkin.price, betAmount);
    } else {
        resultElement.innerHTML = "<p>üò¢ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏.</p>";
        saveToHistory("lose", "–ù–∏—á–µ–≥–æ", 0, betAmount);
    }
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞–≤–∫—É –≤ –∏—Å—Ç–æ—Ä–∏—é
function saveToHistory(status, skinName, skinPrice, betAmount) {
    const history = JSON.parse(localStorage.getItem("csgoRouletteHistory")) || [];
    const newEntry = {
        date: new Date().toLocaleString(),
        bet: betAmount,
        status: status,
        skin: skinName,
        prize: status === "win" ? skinPrice : 0,
    };
    history.unshift(newEntry);
    localStorage.setItem("csgoRouletteHistory", JSON.stringify(history));
    updateHistoryUI();
}

// –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –Ω–∞ —ç–∫—Ä–∞–Ω–µ
function updateHistoryUI() {
    const historyList = document.getElementById("history-list");
    const history = JSON.parse(localStorage.getItem("csgoRouletteHistory")) || [];
    
    historyList.innerHTML = history.length === 0 
        ? "<p>–°—Ç–∞–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç.</p>"
        : history.map(entry => `
            <div class="history-entry ${entry.status}">
                <span>${entry.date}</span>
                <span>–°—Ç–∞–≤–∫–∞: ${entry.bet} ‚ÇΩ</span>
                <span>${entry.status === "win" ? "üèÜ " + entry.skin : "‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à"}</span>
            </div>
        `).join("");
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
document.querySelectorAll(".roulette-btn").forEach(btn => {
    btn.addEventListener("click", () => {
        const price = parseInt(btn.dataset.price);
        tg.showPopup({
            title: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏",
            message: `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å ${price} ‚ÇΩ?`,
            buttons: [
                { id: "confirm", type: "ok", text: "–î–∞" },
                { id: "cancel", type: "cancel", text: "–ù–µ—Ç" },
            ],
        }, (buttonId) => {
            if (buttonId === "confirm") spinRoulette(price);
        });
    });
});

// –ö–Ω–æ–ø–∫–∞ "–ö—Ä—É—Ç–∏—Ç—å —Å–Ω–æ–≤–∞"
document.getElementById("spin-again").addEventListener("click", () => {
    document.getElementById("result").classList.add("hidden");
});

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
updateHistoryUI();
